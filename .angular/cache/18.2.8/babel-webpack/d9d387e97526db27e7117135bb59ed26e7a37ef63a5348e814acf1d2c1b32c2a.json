{"ast":null,"code":"import _asyncToGenerator from \"/workspaces/Presen-a-F-cil/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"../services/event.service\";\nimport * as i3 from \"@angular/forms\";\nexport let ModalPagePage = /*#__PURE__*/(() => {\n  class ModalPagePage {\n    constructor(modalController, eventService, toastController) {\n      this.modalController = modalController;\n      this.eventService = eventService;\n      this.toastController = toastController;\n      this.participant = {\n        nomeCompleto: '',\n        numeroTelefone: ''\n      };\n    }\n    onSubmit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        if (_this.eventId && _this.participant.nomeCompleto && _this.participant.numeroTelefone) {\n          try {\n            yield _this.eventService.addParticipant(_this.eventId, _this.participant);\n            _this.showSuccessMessage();\n            _this.dismissModal();\n          } catch (error) {\n            console.error('Erro ao cadastrar participante:', error);\n          }\n        }\n      })();\n    }\n    showSuccessMessage() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        const toast = yield _this2.toastController.create({\n          message: 'Seu cadastro foi efetuado com sucesso!',\n          duration: 2000,\n          color: 'success',\n          position: 'top'\n        });\n        toast.present();\n      })();\n    }\n    dismissModal() {\n      this.modalController.dismiss();\n    }\n    static {\n      this.ɵfac = function ModalPagePage_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ModalPagePage)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i2.EventService), i0.ɵɵdirectiveInject(i1.ToastController));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ModalPagePage,\n        selectors: [[\"app-modal-page\"]],\n        inputs: {\n          eventId: \"eventId\"\n        },\n        decls: 19,\n        vars: 2,\n        consts: [[\"slot\", \"end\"], [3, \"click\"], [1, \"ion-padding\"], [3, \"ngSubmit\"], [\"position\", \"floating\"], [\"name\", \"nomeCompleto\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"numeroTelefone\", \"type\", \"tel\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"expand\", \"full\", \"type\", \"submit\"]],\n        template: function ModalPagePage_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n            i0.ɵɵtext(3, \"Cadastro de Participante\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"ion-buttons\", 0)(5, \"ion-button\", 1);\n            i0.ɵɵlistener(\"click\", function ModalPagePage_Template_ion_button_click_5_listener() {\n              return ctx.dismissModal();\n            });\n            i0.ɵɵtext(6, \"Fechar\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(7, \"ion-content\", 2)(8, \"form\", 3);\n            i0.ɵɵlistener(\"ngSubmit\", function ModalPagePage_Template_form_ngSubmit_8_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(9, \"ion-item\")(10, \"ion-label\", 4);\n            i0.ɵɵtext(11, \"Nome Completo\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"ion-input\", 5);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function ModalPagePage_Template_ion_input_ngModelChange_12_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.participant.nomeCompleto, $event) || (ctx.participant.nomeCompleto = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(13, \"ion-item\")(14, \"ion-label\", 4);\n            i0.ɵɵtext(15, \"N\\u00FAmero de Telefone\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"ion-input\", 6);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function ModalPagePage_Template_ion_input_ngModelChange_16_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.participant.numeroTelefone, $event) || (ctx.participant.numeroTelefone = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(17, \"ion-button\", 7);\n            i0.ɵɵtext(18, \"Cadastrar\");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(12);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.participant.nomeCompleto);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.participant.numeroTelefone);\n          }\n        },\n        dependencies: [i3.ɵNgNoValidate, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i1.IonButton, i1.IonButtons, i1.IonContent, i1.IonHeader, i1.IonInput, i1.IonItem, i1.IonLabel, i1.IonTitle, i1.IonToolbar, i1.TextValueAccessor]\n      });\n    }\n  }\n  return ModalPagePage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}